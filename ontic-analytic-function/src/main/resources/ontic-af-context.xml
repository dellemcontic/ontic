<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int = "http://www.springframework.org/schema/integration"
       xmlns:int-sftp = "http://www.springframework.org/schema/integration/sftp"
       xmlns:int-syslog="http://www.springframework.org/schema/integration/syslog"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:hdp="http://www.springframework.org/schema/hadoop"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation = "http://www.springframework.org/schema/beans 
       		http://www.springframework.org/schema/beans/spring-beans.xsd 
       		http://www.springframework.org/schema/integration 
       		http://www.springframework.org/schema/integration/spring-integration.xsd
       		http://www.springframework.org/schema/integration/sftp
       		http://www.springframework.org/schema/integration/sftp/spring-integration-sftp-4.0.xsd
       		http://www.springframework.org/schema/integration/syslog
       		http://www.springframework.org/schema/integration/syslog/spring-integration-syslog-4.0.xsd
       		http://www.springframework.org/schema/hadoop 
       		http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
       		http://www.springframework.org/schema/integration/amqp 
       		http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-4.0.xsd
       		http://www.springframework.org/schema/rabbit 
       		http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd
       		http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/data/jpa
			http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <!-- intercept and log every message -->
    <int:logging-channel-adapter id="logger" level="DEBUG" />
    <int:wire-tap channel = "logger" /> 
    
    <!-- Default poller -->
    <int:poller default="true" fixed-delay="1000"/>
    
    
    <!--  
	<int:channel id = "hdfsLastFile">
	</int:channel>
	
	 <hdp:configuration id="hadoopConfiguration" register-url-handler="false">
		fs.defaultFS=${hadoop.hdfsurl}
	</hdp:configuration>
	
	
	 <bean id="hadoopAccess" class="ontic.af.hadoop.HadoopAccess">
    	<constructor-arg ref="hadoopConfiguration"/>
    	<property name="basePath" value="${hadoop.basepath}"></property>
     </bean>
	
	<int:inbound-channel-adapter ref="hadoopAccess" method="getLastFileContent" channel="hdfsLastFile">
    <int:poller fixed-rate="5000"/>
   </int:inbound-channel-adapter>
   
   <bean id="analyticDB" class="ontic.af.analytic.AnalyticsToDB">
   </bean>
	
   <int:outbound-channel-adapter channel="hdfsLastFile" ref="analyticDB" method="analyze"/>
   -->
   
    <bean id="myHeaderMapper" class="org.springframework.integration.amqp.support.DefaultAmqpHeaderMapper">
                    <property name="requestHeaderNames" value="*"/>
                    <property name="replyHeaderNames" value="*"/>
      </bean>               
                    
     <context:property-placeholder location="application.properties,rabbitmq-config.properties" />
   	<rabbit:connection-factory id="rabbitConnectionFactory" port="${rabbitmq.port}" host="${rabbitmq.server}" virtual-host="${rabbitmq.virtualhost}" username="${rabbitmq.username}" password="${rabbitmq.password}" />
	<rabbit:admin connection-factory="rabbitConnectionFactory"/>
    <rabbit:template id="amqpTemplate" connection-factory="rabbitConnectionFactory"/>
    <int:channel id="messagesFromAmqp"/>
	<int-amqp:inbound-channel-adapter
                    channel="messagesFromAmqp"
                    queue-names="${rabbitmq.queue}"
                    acknowledge-mode="AUTO"
                    connection-factory="rabbitConnectionFactory"
                    receive-timeout="1000"
                    recovery-interval="3000"
                    header-mapper="myHeaderMapper"/>
      <bean id="analyticsToDB" class="ontic.af.analytic.AnalyticsToDB"/>
      <int:service-activator method="" ref="analyticsToDB" input-channel="messagesFromAmqp"/>
     <jpa:repositories base-package="ontic.af.action.db.repository" />
</beans>
